{"version":3,"sources":["core/firebase.js","core/config.js","styles/mediaStyles.jsx","core/colorCoding.js","components/Stats.js","components/DisplayMessages.js","components/AsyncAnimMsg.js","components/MessagesAggregator.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","initializeApp","bp","mobileTest","window","innerWidth","createStitches","media","bp0","bp1","bp2","bp3","css","styled","dynamicFontSize","minFontSize","maxFontSize","initScrVal","regressionFormula","zeroVal","medVal","fullVal","Math","pow","log","regressionFinalValue","valA","valB","valC","valScr","exp","msgNlRegFormula","nlResVal","pieLinRegFormula","pieMinSize","outerRadius","colorCoding","Map","set","Stats","messages","msgFontSize","chartFontSize","breakdownFontSize","gridStats","height","width","display","variants","variant","mobile","gridTemplateColumns","gridTemplateRows","desktop","pieChartStyle","gridRow","messagesStyle","fontSize","color","msgBreakdownStyle","listStyle","placeSelf","useEffect","d3","select","remove","svg","append","attr","arcGenerator","innerRadius","pieGenerator","padAngle","value","d","arc","selectAll","data","dataReady","enter","style","get","text","centroid","drawChart","arr","list","map","entry","emotion","Set","filter","str","length","sort","dataRetriever","breakdownList","document","getElementById","parent","firstChild","childKiller","forEach","listItem","createElement","innerHTML","appendChild","className","id","DisplayMessages","message","isVisible","useState","rotateRandom","rotate","setRotate","transform","val","random","AsyncAnimMsg","xCorrectionValue","yCorrectionValue","tension","wWidth","setIsVisible","setMessage","xPositionCalculator","xPositionValue","setXPositionValue","yPositionCalculator","yPositionValue","setYPositionValue","transition","useTransition","from","x","y","opacity","leave","config","mass","friction","onRest","positionValue","posFor","floor","sign","justifyContent","alignItems","item","div","MessagesAggregator","gridBox","gridGap","placeItems","App","setMessages","app","textAlign","main","backgroundImage","backgroundSize","minHeight","fontFamily","navBar","backgroundColor","navMainLink","marginLeft","marginRight","textDecoration","navStatsLink","marginTop","onSnapshot","collection","db","snapshot","docs","doc","href","path","exact","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a011aa8.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"@firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nimport {\n  API_KEY,\n  AUTH_DOMAIN,\n  PROJECT_ID,\n  STORAGE_BUCKET,\n  MESSAGING_SENDER_ID,\n  APP_ID,\n} from \"./config.js\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: API_KEY,\n  authDomain: AUTH_DOMAIN,\n  projectId: PROJECT_ID,\n  storageBucket: STORAGE_BUCKET,\n  messagingSenderId: MESSAGING_SENDER_ID,\n  appId: APP_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport default getFirestore();\n","export const API_KEY = \"AIzaSyDjgyLNtnol6-PggLgIqUKuHOfWpxX6Q-g\";\nexport const AUTH_DOMAIN = \"sendamessageof.firebaseapp.com\";\nexport const PROJECT_ID = \"sendamessageof\";\nexport const STORAGE_BUCKET = \"sendamessageof.appspot.com\";\nexport const MESSAGING_SENDER_ID = \"705239841314\";\nexport const APP_ID = \"1:705239841314:web:c4661d098d4d1af1ece87b\";\n","import { createStitches } from \"@stitches/react\";\n\n//breakpoints\nexport const bp = [320, 640, 768, 1440];\n//If mobile\nexport const mobileTest = window.innerWidth > bp[1];\n\nexport const { styled, css } = createStitches({\n  media: {\n    bp0: `(min-width: ${bp[0]}px)`,\n    bp1: `(min-width: ${bp[1]}px)`,\n    bp2: `(min-width: ${bp[2]}px)`,\n    bp3: `(min-width: ${bp[3]}px)`,\n  },\n});\n\n//Dynamic font formula - potentially adjust for bp0. Might not be working as intended. Double-check\n// const defaultFontSize = 16;\n// export const dynamicFontSize = (minFontSize, maxFontSize) => {\n//   const slope = (maxFontSize - minFontSize) / (bp[3] / 16 - bp[0] / 16);\n//   const yAxisIntersection = (-bp[0] / 16) * slope + minFontSize;\n//   return [slope, yAxisIntersection];\n// };\n\nexport const dynamicFontSize = (minFontSize, maxFontSize) => {\n  return (\n    minFontSize +\n    (maxFontSize - minFontSize) *\n      ((window.innerWidth - bp[0]) / 16 / ((bp[3] - bp[0]) / 16))\n  );\n};\n\n//Dynamic animation positioning. Takes into account screen size and distributes the messages using a nonlinear regression\nconst initScrVal = (window.innerWidth - 320) / 1120;\n\nconst regressionFormula = (zeroVal, medVal, fullVal) => {\n  const regValA =\n    (zeroVal * fullVal - Math.pow(medVal, 2)) /\n    (zeroVal - 2 * medVal + fullVal);\n  const regValB =\n    Math.pow(medVal - zeroVal, 2) / (zeroVal - 2 * medVal + fullVal);\n  const regValC = 2 * Math.log((fullVal - medVal) / (medVal - zeroVal));\n  return [regValA, regValB, regValC];\n};\n\nconst regressionFinalValue = (valA, valB, valC, valScr) => {\n  return valA + valB * Math.exp(valC * valScr);\n};\n\nconst msgZeroVal = 0; //x\nconst msgMedVal = 5; //y\nconst msgFullVal = 14; //z\n\nconst msgNlRegFormula = regressionFormula(msgZeroVal, msgMedVal, msgFullVal);\n//Final value for the nl regression. To be used in percentages\n// export const nlResVal =\n//   msgNlRegFormula[0] +\n//   msgNlRegFormula[1] * Math.exp(msgNlRegFormula[2] * initScrVal);\n\nexport const nlResVal = regressionFinalValue(\n  msgNlRegFormula[0],\n  msgNlRegFormula[1],\n  msgNlRegFormula[2],\n  initScrVal\n);\n\n//Inverse number relation formula\nexport const scale = (num, in_min, in_max, out_min, out_max) => {\n  return ((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n};\n\nconst pieMinSize = 135;\nconst pieMaxSize = 310;\nconst pieMedSize = pieMinSize + (pieMaxSize - pieMinSize) / 2 + 1;\nconst pieLinRegFormula = regressionFormula(pieMinSize, pieMedSize, pieMaxSize);\nexport const outerRadius = regressionFinalValue(\n  pieLinRegFormula[0],\n  pieLinRegFormula[1],\n  pieLinRegFormula[2],\n  initScrVal\n);\nexport const innerRadius = 0;\n\n///testing random stuff\n// const a = 10;\n// const b = 9;\n// console.log(a * (a < b) + b * (b <= a));\n// console.log(window.innerHeight);\n","export const colorCoding = new Map();\n\ncolorCoding\n  .set(\"sad\", \"rgb(29, 32, 222)\")\n  .set(\"happy\", \"green\")\n  .set(\"disgusted\", \"purple\")\n  .set(\"love\", \"rgb(230, 24, 119)\")\n  .set(\"surprised\", \"orange\")\n  .set(\"afraid\", \"rgb(206, 217, 17)\")\n  .set(\"angry\", \"red\")\n  .set(\"indifferent\", \"gray\");\n","import * as d3 from \"d3\";\nimport { useEffect } from \"react\";\nimport { colorCoding } from \"../core/colorCoding\";\n\nimport {\n  css,\n  dynamicFontSize,\n  mobileTest,\n  outerRadius,\n  innerRadius,\n} from \"../styles/mediaStyles\";\n\nconst Stats = ({ messages }) => {\n  //Messages submitted dymanic font\n  const msgMinFontSize = 1.8;\n  const msgMaxFontSize = 4.6;\n  const msgFontSize = dynamicFontSize(msgMinFontSize, msgMaxFontSize);\n  //Pie chart dynamic font\n  const chartMinFontSize = 1.3;\n  const chartMaxFontSize = 2.2;\n  const chartFontSize = dynamicFontSize(chartMinFontSize, chartMaxFontSize);\n  //Message breakdown dynamic font\n  const breakdownMinFontSize = 1.3;\n  const breakdownMaxFontSize = 2.6;\n  const breakdownFontSize = dynamicFontSize(\n    breakdownMinFontSize,\n    breakdownMaxFontSize\n  );\n\n  const gridStats = css({\n    height: \"95vh\",\n    width: \"95vw\",\n    display: \"grid\",\n\n    variants: {\n      variant: {\n        mobile: {\n          gridTemplateColumns: \"1fr\",\n          gridTemplateRows: \"1fr 1fr 1fr\",\n        },\n        desktop: {\n          gridTemplateColumns: \"1fr 1fr\",\n          gridTemplateRows: \"1fr 1fr\",\n        },\n      },\n    },\n  });\n\n  const pieChartStyle = css({\n    variants: {\n      variant: {\n        desktop: {\n          gridRow: \"1 /span 2\",\n        },\n      },\n    },\n  });\n\n  const messagesStyle = css({\n    fontSize: `clamp(${msgMinFontSize}rem, ${msgFontSize}rem, ${msgMaxFontSize}rem)`,\n    color: \"black\",\n  });\n\n  const msgBreakdownStyle = css({\n    fontSize: `clamp(${breakdownMinFontSize}rem, ${breakdownFontSize}rem, ${breakdownMaxFontSize}rem)`,\n    color: \"black\",\n    listStyle: \"none\",\n    // alignSelf: \"center\",\n    placeSelf: \"center\",\n  });\n\n  const margin = {\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 50,\n  };\n\n  const width = 2 * outerRadius + margin.left + margin.right;\n  const height = 2 * outerRadius + margin.top + margin.bottom;\n\n  useEffect(() => {\n    drawChart();\n  }, [messages]);\n\n  const childKiller = (parent) => {\n    while (parent.firstChild) {\n      parent.firstChild.remove();\n    }\n  };\n\n  const dataRetriever = (messages) => {\n    let arr = messages.map((entry) => {\n      return entry.emotion;\n    });\n    let unique = [...new Set(arr)];\n\n    let finalData = unique.map((value) => [\n      value,\n      arr.filter((str) => str === value).length,\n    ]);\n    return finalData.sort();\n  };\n  const dataReady = dataRetriever(messages);\n\n  const breakdownList = document.getElementById(\"breakdown-list\");\n  const breakdownListGenerator = (arr, list) => {\n    breakdownList !== null && childKiller(breakdownList);\n\n    arr.forEach((entry) => {\n      let listItem = document.createElement(\"li\");\n      listItem.innerHTML = `${entry[1]} ${\n        entry[1] > 1 ? \"people are\" : \"person is\"\n      } ${entry[0] === \"love\" ? \"in\" : \"\"} ${entry[0]}`;\n      list.appendChild(listItem);\n    });\n  };\n  dataReady && breakdownListGenerator(dataReady, breakdownList);\n\n  function drawChart() {\n    //reduce method - more elegant solution. Check if you can implement it without too much headache\n    // const filteredMessages = messages\n    //   .map((entry) => {\n    //     return entry.emotion;\n    //   })\n    //   .reduce((a, c) => a.set(c, (a.get(c) || 0) + 1), new Map());\n\n    // console.log(filteredMessages.entries());\n    // console.log(filteredMessages);\n\n    //set and filter method - second option if can't get the upper one to output arrays\n\n    // Remove the old svg\n    d3.select(\"#pie-container\").select(\"svg\").remove();\n\n    // Create new svg\n    const svg = d3\n      .select(\"#pie-container\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    const arcGenerator = d3\n      .arc()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n\n    const pieGenerator = d3\n      .pie()\n      .padAngle(0)\n      .value((d) => d[1]);\n\n    const arc = svg.selectAll().data(pieGenerator(dataReady)).enter();\n\n    arc\n      .append(\"path\")\n      .attr(\"d\", arcGenerator)\n      .style(\"fill\", (d) => colorCoding.get(d.data[0]))\n      .style(\"stroke\", \"#ffffff\")\n      .style(\"stroke-width\", 0);\n\n    // Append text labels\n    arc\n      .append(\"text\")\n      // .data(data_ready)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .text((d) => d.data[0])\n      .style(\"fill\", \"white\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\n        \"font-size\",\n        `clamp(${chartMinFontSize}rem, ${chartFontSize}rem, ${chartMaxFontSize}rem)`\n      )\n      .attr(\"transform\", function (d) {\n        return `translate(${arcGenerator.centroid(d)})`;\n      });\n  }\n\n  return (\n    <div className={gridStats({ variant: mobileTest ? \"desktop\" : \"mobile\" })}>\n      <div\n        id=\"pie-container\"\n        className={pieChartStyle({ variant: mobileTest && \"desktop\" })}\n      />\n      <h1 className={messagesStyle()}>Feelings Shared: {messages.length}</h1>\n      <ul className={msgBreakdownStyle()} id=\"breakdown-list\"></ul>\n    </div>\n  );\n};\n\nexport default Stats;\n","import { colorCoding } from \"../core/colorCoding\";\nimport { useState, useEffect } from \"react\";\n\nimport { css, dynamicFontSize } from \"../styles/mediaStyles\";\n\nconst DisplayMessages = ({ message, isVisible }) => {\n  const minFontSize = 1.6;\n  const maxFontSize = 2.8;\n  const fontSize = dynamicFontSize(minFontSize, maxFontSize);\n  const [rotate, setRotate] = useState(rotateRandom(30));\n  const messages = css({\n    color: colorCoding.get(message.emotion),\n    //add formula to calculate the width - optional\n    width: \"75%\",\n    fontSize: `clamp(${minFontSize}rem, ${fontSize}rem, ${maxFontSize}rem)`,\n    // position: \"absolute\",\n    transform: `rotate(${rotate}deg)`,\n  });\n\n  function rotateRandom(val) {\n    return `${Math.random() >= 0.5 ? \"+\" : \"-\"}${Math.random() * val}`;\n  }\n\n  useEffect(() => {\n    if (isVisible) {\n      setRotate(rotateRandom(30));\n    }\n  }, [isVisible]);\n\n  return (\n    <>\n      <h3 className={messages()}>{message.message}</h3>\n    </>\n  );\n};\n\nexport default DisplayMessages;\n","import DisplayMessages from \"./DisplayMessages\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/messageStyles.css\";\nimport { useTransition, animated } from \"@react-spring/web\";\nimport { nlResVal, bp } from \"../styles/mediaStyles\";\n\nconst AsyncAnimMsg = ({\n  messages,\n  xCorrectionValue,\n  yCorrectionValue,\n  tension,\n}) => {\n  const wWidth = window.innerWidth;\n  const [isVisible, setIsVisible] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [xPositionValue, setXPositionValue] = useState(\n    xPositionCalculator(nlResVal)\n  );\n  const [yPositionValue, setYPositionValue] = useState(\n    yPositionCalculator(Math.random() >= 0.5 ? \"+\" : \"-\", nlResVal)\n  );\n\n  const transition = useTransition(isVisible, {\n    //randomize x between 0 and 30\n    //randomize y between -50 and 50\n    //randomize sign for ALL elements\n    //Use correction value to adjust the values\n    //Modify nl reg formula to accept and use new values\n    //Right side messages closer to the center\n\n    from: {\n      x: xPositionValue,\n      y: yPositionValue,\n      opacity: 0,\n      filter: \"blur(0.5px)\",\n    },\n    enter: {\n      x: xPositionValue,\n      y: yPositionValue,\n      opacity: 1,\n    },\n    leave: { opacity: 0 },\n\n    config: { mass: 1, tension: tension, friction: 30 },\n    onRest: () => setIsVisible(!isVisible),\n  });\n\n  function xPositionCalculator(positionValue) {\n    const posFor = (value) =>\n      value + Math.floor(Math.random() * xCorrectionValue) + \"%\";\n\n    if (wWidth <= bp[0]) return posFor(1);\n\n    if (wWidth >= bp[3]) return posFor(15);\n\n    return posFor(positionValue);\n  }\n  function yPositionCalculator(sign, positionValue) {\n    const posFor = (sign, value) =>\n      sign + (value + Math.floor(Math.random() * yCorrectionValue)) + \"%\";\n\n    return posFor(sign, positionValue);\n  }\n\n  useEffect(() => {\n    if (isVisible) {\n      setMessage(messages[Math.floor(Math.random() * messages.length)]);\n      setXPositionValue(xPositionCalculator(nlResVal));\n      setYPositionValue(\n        yPositionCalculator(Math.random() >= 0.5 ? \"+\" : \"-\", nlResVal)\n      );\n    }\n  }, [isVisible]);\n\n  return (\n    <div\n      className=\"containerr\"\n      style={{\n        // position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {transition((style, item) =>\n        item ? (\n          <animated.div style={style}>\n            <DisplayMessages message={message} isVisible={isVisible} />\n          </animated.div>\n        ) : (\n          \"\"\n        )\n      )}\n    </div>\n  );\n};\n\nexport default AsyncAnimMsg;\n","import AsyncAnimMsg from \"./AsyncAnimMsg\";\nimport \"../styles/messageStyles.css\";\nimport { css, mobileTest } from \"../styles/mediaStyles\";\n\nconst MessagesAggregator = ({ messages }) => {\n  const gridBox = css({\n    height: \"88vh\",\n    width: \"95vw\",\n    display: \"grid\",\n    gridGap: \"1rem\",\n    placeItems: \"center\",\n\n    variants: {\n      variant: {\n        mobile: {\n          gridTemplateColumns: \"1fr\",\n          gridTemplateRows: \"1fr 1fr 1fr\",\n        },\n        desktop: {\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          gridTemplateRows: \"1fr 1fr\",\n        },\n      },\n    },\n  });\n\n  return (\n    <div className={gridBox({ variant: mobileTest ? \"desktop\" : \"mobile\" })}>\n      {messages.length && mobileTest && (\n        <AsyncAnimMsg\n          messages={messages}\n          tension=\"33\"\n          xCorrectionValue={25}\n          yCorrectionValue={40}\n        />\n      )}\n      {messages.length && mobileTest && (\n        <AsyncAnimMsg\n          messages={messages}\n          tension=\"27\"\n          xCorrectionValue={25}\n          yCorrectionValue={40}\n        />\n      )}\n      {messages.length && mobileTest && (\n        <AsyncAnimMsg\n          messages={messages}\n          tension=\"48\"\n          xCorrectionValue={25}\n          yCorrectionValue={40}\n        />\n      )}\n      {messages.length && (\n        <AsyncAnimMsg\n          messages={messages}\n          tension=\"36\"\n          xCorrectionValue={25}\n          yCorrectionValue={40}\n        />\n      )}\n      {messages.length && (\n        <AsyncAnimMsg\n          messages={messages}\n          tension=\"41\"\n          xCorrectionValue={25}\n          yCorrectionValue={40}\n        />\n      )}\n      {messages.length && (\n        <AsyncAnimMsg\n          messages={messages}\n          tension=\"53\"\n          xCorrectionValue={25}\n          yCorrectionValue={40}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MessagesAggregator;\n","import \"./App.css\";\nimport db from \"./core/firebase\";\nimport { onSnapshot, collection } from \"@firebase/firestore\";\nimport { useState, useEffect } from \"react\";\nimport { css } from \"./styles/mediaStyles\";\nimport { Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport Stats from \"./components/Stats\";\nimport MessagesAggregator from \"./components/MessagesAggregator\";\n\n///Task list\n\n// Add try catch - OPTIONAL\n// Refactor code, get rid of redundancies, and clean up. Including directories and default React shit\n// Figure out what's the deal with the confusing firebase functions - called but never used\n// Document every function with the cool document function. This is at the very end\n\n//Add spray cans to the messaging website\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  const app = css({\n    textAlign: \"center\",\n  });\n\n  const main = css({\n    backgroundImage: 'url(\"img/background_wals_white_generated.jpg\")',\n    backgroundSize: \"auto\",\n    minHeight: \"90vh\",\n    // maxHeight: \"95vh\",\n    fontFamily: \"blankRiver\",\n    // height: \"95vh\",\n    fontSize: \"16px\",\n    color: \"white\",\n  });\n\n  const navBar = css({\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"black\",\n    backgroundColor: \"transparent\",\n    minHeight: \"1vh\",\n  });\n\n  const navMainLink = css({\n    marginLeft: \"2rem\",\n    // marginTop: \"1rem\",\n    marginRight: \"1rem\",\n    textDecoration: \"none\",\n  });\n\n  const navStatsLink = css({\n    marginTop: \"0.4rem\",\n    marginRight: \"1rem\",\n    textDecoration: \"none\",\n  });\n\n  useEffect(\n    () =>\n      onSnapshot(collection(db, \"messages\"), (snapshot) =>\n        setMessages(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\n      ),\n    []\n  );\n\n  return (\n    <div className={app()}>\n      <nav>\n        {/* <div className=\"main\"> */}\n        <div className={navBar()}>\n          <h1 className={navMainLink()}>\n            <a style={{ textDecoration: \"none\", color: \"black\" }} href=\"/\">\n              FeelsWall\n            </a>\n          </h1>\n          <span className={navStatsLink()}>\n            <a style={{ textDecoration: \"none\", color: \"black\" }} href=\"/stats\">\n              Statistics\n            </a>\n          </span>\n        </div>\n      </nav>\n      <main className={main()}>\n        <BrowserRouter>\n          <Routes>\n            <Route\n              path=\"/\"\n              exact\n              element={<MessagesAggregator messages={messages} />}\n            />\n            <Route\n              path=\"/stats\"\n              exact\n              element={<Stats messages={messages} />}\n            />\n          </Routes>\n        </BrowserRouter>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n    <App />\n    {/* </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}